import requests
from bs4 import BeautifulSoup
import pandas as pd

def get_guerre_lists():
    # URL de la page principale listant les guerres
    url_base = "https://fr.wikipedia.org/wiki/Liste_des_guerres"

    # Mots-cl√©s √† exclure dans les liens
    mots_a_exclure = ["Article", "Discussion", "Lire", "Modifier", "Voir", "Aide", "Historique", "Sp√©cial",
                    "Liste", "Pages", "Cat√©gorie", "Portail", "Projet", "Index","Citer"]

    # Effectuer la requ√™te sur la page principale
    response = requests.get(url_base)
    if response.status_code != 200:
        print("‚ö†Ô∏è Erreur lors de la r√©cup√©ration de la page principale Wikip√©dia")
        exit()

    soup = BeautifulSoup(response.text, "html.parser")

    # Stocker les liens des guerres √† scraper
    guerres_urls = []

    # Trouver toutes les listes de guerres et filtrer les liens inutiles
    for li in soup.select("li a"):
        lien = li.get("href")
        texte = li.text.strip()

        if lien and lien.startswith("/wiki/") and "guerre" in lien.lower():
            if any(mot.lower() in texte.lower() for mot in mots_a_exclure):
                continue  # Ignorer cette page si elle contient un mot exclu

            url_guerre = f"https://fr.wikipedia.org{lien}"
            guerres_urls.append({
                "Nom": texte,
                "URL": url_guerre
            })

    print(f"üîç {len(guerres_urls)} guerres trouv√©es √† scraper !")

    # Sauvegarde des donn√©es dans un fichier CSV
    df = pd.DataFrame(guerres_urls)

    # Supprimer les doublons bas√©s sur la colonne "URL"
    df_clean = df.drop_duplicates(subset=["URL"], keep="first")
    print(f"‚úÖ Suppression des doublons termin√©e ! {len(df_clean)} guerres uniques enregistr√©es.")

    df_clean.to_csv("details_guerres.csv", index=False, encoding="utf-8")
    print("‚úÖ Scraping termin√© ! Donn√©es enregistr√©es dans 'details_guerres.csv'.")
    return df_clean

    # Permet d'ex√©cuter le script seul ou l'importer ailleurs
if __name__ == "__main__":
    urls = get_guerre_lists()